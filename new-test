
Team Managers meeting talking points
================================
-Discourage chatting during class

-Make sure all teammates have environments setup(AWS account,Free zoom,Can launch and ssh into server,downloaded sublime,access telegram/WhatsApp on laptop,download mobaxterm)

-All team leads drop date and time of group meetings ( include timezone)

-Team leads should also drop weekly report every Sunday before 6pm Est . The report should have a record of teammates who were present,absent,took excuse. Summary of projects/module worked on and any relevant information necessary to pass on. This report should be dropped on managers channel by either Team lead or assistant using the format dropped .


Dev-Ops E. Degree Syllabus:
===========================
Modules:
1. DevOps Introduction  :  
 SDLC  
     Waterfall Model
 Why DevOps? 
    1. Automation
    2. Transformation 
    3. Disruption 
    4. Innovation 
 DevOps Importance? 
   The Present and the Future 
   of IT innovation 

 SME = Subject Matter Expert 
  1. Technical skills  
  2. Managerial skills
       - Project Managers  
       - Scrum Masters   
  3. Leadership skills  
As a DevOps Engineer I Work with my team to: 
    develop applications , 
    test applications, 
    build applications, 
    review + qualify applications, 
    secure applications, 
    deploy applications,
    Access applications,  
    maintain applications, 
    manage and monitor applications
    using 
    computerised automated Technologies 
    Technology stack 

2. Linux and Linux Commands 27hrs:
     Windows 
       venors: HP/DELL/ASUS/LENOVO =   
     macOs  
       venors: Apple  
     Linux:
        vendors: Redhat/Ubuntu 
     
3. Shell Scripting  - 15 hours  
   Welcome to BOA/TD/UBA/BB

4. Git - Versioning 12 hours
   GitHub - SCM -   

5. Maven – 6 hours 
   UnitTesting + Build 
   code+build = packages 
               war/ear/jar  

6. Tomcat / JBoss/  - 4 hours  

7. Apache HTTP Server - 3 HOURS
   nginx webServer 

8. SonarQube  = 5hours  
     Code quality Analysis  
     Review + Qualify the code  

9. Nexus/JFrog:  5hours
    UploadArtifacts 
    backup + security 

10. CI/CD Automation - Jenkins = :
    18 hours 
    Money bag / 
    140k/yr 
    Build and Release Engineer 
    Jenkins Engineers  

12: Application performance monitoring
    NewRelic = APM  = 2 HOURS  

13. AWS: Amazon Web services = 
    AWS Certified Solutions Architect = 13
    CLASS = 21hrs
    27 hours on-demand video

       Cloud Engineer 
       Sr. Cloud Engineer 

14. Terraform -IaC  -- 24 hours :
     Sr. Infrastructure Engineer  

15. Docker and Docker swarm: 24 hours  

16. Kubernetes/Helm:  - 36 hours  - CKA

17. Prometheus and Grafana  = apm  

18. EFK/ELK = log mgt and data Analytics   

19. Ansible = 15 hour  
======================================
20. Python  = 21 hours  

21. AZURE AND GCP
===================================
1. Modules  = 4.5 MONTHS:
              May 21, 2023 
      Fee = 3,600 USD                  :
2. Bootcamp = Interview Q/A reviews: 
             May 30, 2023 to July 8, 2023
              7 weeks ending July 8,2023
   Tuesday = 7pm - 11pm EST               
   50% hired 
3. Morning devotion: 
     June 12  - Oct 7, 2023 
     Mondays to Fridays 6am-8:30am 
    Interview simulations  
    Interview review 
    Hot seat  
4. One on one with Bootcamp Engineers:
   30-60min session to 
   Review Resume and Linkedin profile 
Graduation date: July 8, 2023  :  
================================
2022 OVER 400 HIRED  
2023 OVER 3,000 Engineers to be   
    hired 

1. 100% job guarantee. 
2. 100% jobs guarantee. 
Conduct: 8 offers  
================================
USA  = 150,000 USD 

1. class31 Whatsapp group   = 
2. class31 devops group     = telegram  :
      Class videos, running notes and notes 
3. class31  solution group  = telegram
      class31 Troubleshooting and problem solving 
4. Landmark Help desk       = telegram  group
      General Troubleshooting and problem solving 
5. Teams = 14 team members  = Jan 28, 2023 
6. Bootcamp Channel 
7. Sr. Engineers = 

Landmark Technologies,:
Tel/Whatsapp and Telegram contacts
    +1 437 215 2483
    +1 437 221-3099
    +1 (470) 483-2473
    +1 571 453 6677
    +1 206 210 4445

https://github.com/LandmakTechnology/questions-answers
https://github.com/LandmakTechnology/questions-answers/tree/master/contacts

2. Class31 devops group     = telegram  :
     Class videos, 
     running notes and 
     pdf/power point notes 

BLESSINGS = 
Curse = 
  - Professional 
  - NO 
1. STUDENT                =   Jan 10, 2023 
2. Jr. Engineer / Worker  = Jan 28, 2023  
5. 5 Siblings  =  

=================================
2004 = 

Whatsapp number is different from Telegram
Whatsapp number and Telegram number must be the same:

14 job offers :
  References  = 
     Obi 
Full names  = 
======================



Important dates:
Landmark Technologies 
Class31 DevOps Master Program 
  Start Date: Jan 14, 2023 
  End date:   May 21, 2023
Time-Table:
  Mon: 7PM - 10PM EST   
  TUE: 7PM - 10PM EST 
  Sat: 12pm - 3pm EST  
  NB: Classes are in New York Time  

Goodnews!!!  Goodnews!!!            :
Morning Devotion continues
  Morning Devotion - 
    Interview Review
    Hotseat
Days: Mondays to Fridays
Time: 6am-8am EST 
End date: April 13, 2023

NB: Join with your webcam/Video ON        :

Landmak Technologies               :
DevOps E-Degree Master Program  
Class31:
  Start Date: Jan 14, 2023  
  End Date:   May 21, 2023 

Register NOW using:
  mylandmarktech.com/join


======================================================================
What is a Computers ??
   HARDWARE components 
     motherboards, CPU, Screen, keyboard, mouse, harddrive, RAM, Cards 
   software components
      1. OS = Operating system and 
      2. others softwares - office, adobe, antivirus

Vendors: 
  Lenovo / dell / hp / apple / Acer / asus / 
  toshiba / yoga / samsung / sony / LG 
Class of Computers:  
  Personal Computers: Desktop, Laptop, IPADs, Tablets, Phones, 
                      notebook, watches, etc. 
  Enterprise Computers : Workstations, 
                         Servers (super computers) 

Operating system:
The Operating system running in a computer defines the type:
Operating system = OS  
  Linux OS  ---- bullet proof  
  Windows OS ---
  Solaris    
  Mac OS 
  IOS  
  Android 

Lenovo Laptop is running with a Linux OS? = Linux system
HP Laptop is running with a Solaris OS?   = Solaris system
dell Laptop is running with a Windows OS? = Windows system
 - 
Can I change my OS from Linux to Windows or visa versa ? YES

Can I computer have more than ONE OS at once?? 99% 
Tesla employs you as their DevOps Manager  = 280k/yr 
===========================================================
What determines the choice of an OS:
  1. security 
        85% of our servers are Linux based
        Linux systems are not vulnerable to virus attack  
        Windows systems are vulnerable to virus attack   
  2. cost
        Linux is a free and Open source OS  
        Windows is a licenced/PAID OS   
  3. support 
       Linux has a very large, effective and free community support[2b]
       Windows support is available Only from Microsoft[.1b] but paid for.   
  4. usage 
        Linux OS is mostly utilised for Enterprise tasks
        Windows is utilised as Workstations
  5. performance 
  6. Reviews 
  7. speed 
  8. scability and elasticity 
==========================================
How are tasks runned/executed on a computer?
what kind of workloads can be executed on a computer systems?
  1. Create files and add content
  2. Modify files  
  3. Create folders / directories 
  4. create sub-folders   
  5. send emails    
  6. downloads files  
  7. watch movies  
  8. create users  
  9. backup 
  10. website 
  11. make-money [25,000+USD]
  12. gaming
  13. trading 
How are tasks performed on computer systems?
use one or more of the following options to run workloads on computer systems:
  1. GUI = Graphical user interface  
           Graphical user   = 2 hours  
           25,000usd - 65,000usd per year  
           Administrative Assistant/ Customer Service / 

  2. CLI = Command Line interface  
           command user = 5min 
           powerShell/
           gitbash 
           terminal  

  touch 
  mkdir 
  cd
  ls 


Linux OS and Linux Commands
============================ 
Linux is an Open Source Operating System
Linux started around 1991 by Linus Torlvads

Linus was using a Solaris system for his project.
  --Encounter a problem running his project  
  --He contacted the vendor but the response was delayed    
Unlike IBM AIX, Sun Solaris, HP-UX, Windows OS  

Linus  :
Working on his Project using a Solaris system: 
Linus created the Linux OS from the Solaris kernel/OS []:

Linux is an open source OS with multiple destributions/versions.
    Windows, Solaris, MacOS, etc are licenced OS.
Softwares can be:
  1. open source: [Free with its The source code]  
     open source softwares has more community support

  2. Free:     [free but without the source code(recipe)] 

  3. Licenced: [paid for, Windows OS, Office365]  

IQ: Explain your experience in Open SOURCE TECHNOLOGY?? Linux, 
     With Open source Technologies the software is free including 
     the source code[recipe/secrets of the business]
    Tayo: Dinner = Fried Rice             = Free
    Mary: Dinner = Fried Rice + recipe    = Open source 

    Vivian: Mary-recipe+addons       = vivian-Linux OS    
    Paul:   Mary-recipe+paul-addons  

Distributions of Fried Rice:
  FriedRiceMary
  FriedRiceVivian
  FriedRicePaul

Create and connect to a Linux server/system:
=============================
1. Buy a Linux server from the market 
   Configure the server  = COST = 50,000USD / time = 100x x=500min    

2. Use a hypervisor to create a Linux Virtual machine on your system
        2,000 GB SSD / 64GB memory = 3,000USD  = 10x, 50min

3. Use a managed cloud compting provider [aws, azure, GCP, etc.]
       500 - 1,000 USD  TIME= X, x=5min 
       8GB and 256/500G SSD 

3a. Create a free account in AWS Cloud using:
       website: aws.amazon.com
       Root user email address: info@LandmarkMETROPOLITANUNIVERSITY.COM 
       tel no:   
       credit card: 
       password: Licom2045@    

3b. Launch a server in AWS:
      - Login into AWS account  
      - Search for EC2 console 
      - Launch your server [ec2-instance]
      - connect to the Linux ec2-instance using:
            1. Redhat9 [demoserver31]  
            2. Amazon Linux 2 [appserver1]

               ipAddress       userName   password/sshKey  
demoserver31   52.23.211.7     ec2-user   class31key.pem  
appserver1     184.72.176.212  ec2-user   class31key.pem  

connecting to the server:
=========================
Connect to your Linux server in AWS using ssh-client -   :
 SSH protocol  = Secure shell is use to connect to Linux systems
     1. ssh-client software [provide a passage]
         mobaXterm, puTTY, gitBash
         Download an install mobaXterm ssh-client software
    2. identification = userName  
    3. authentication = password or an SSH_KEY   
    4. AUTHORISATION = what you do in the server  
       Tasks that a user is AUTHORISE to execute 

chmod 400 class31key.pem
ssh -i class31key.pem ec2-user@184.72.176.212 
ssh -i "class31key.pem" ec2-user@ec2-184-72-176-212.compute-1.amazonaws.com

  ssh -i class31key.pem ec2-user@52.23.211.7   

  ssh 184.72.176.212@ec2-user 

Download:
   sublime text  -- text editor
   mobaXterm 
   bracket       -- text editor
   Telegram  


Amazon Web Services - aws:
==========================
               amazon.com is the parent company for aws   
  website: aws.amazon.com  

1. You need an aws account 
   Login into your aws account  
       Root email address:  abc@gmail.com   
       password: Admin@123  

2. Search aws ec2 service console  
   Launch your Linux ec2-instance/VM/server 
   We need the server to run tasks for clients [tesla/boa/dod]    

3. Connect to the server and run tasks 
   - You need a computer, e.g windows system 
   - SSH (secure shell) protocol is required  
   - we need an ssh-client software e.g mobaXterm     
   - We need the server's details:
        ip-address: 18.234.79.178
        userName: ec2-user   
        password:   
        ssh-private-Key:  demo31.pem   
         macOS terminal = ssh -i  demo31.pem ec2-user@18.234.79.178

 4. Open ssh-port=22 on the server firewall / security Group 

 Linux File Structure   
 =====================
                 Windows        Linux:
 -               Files          Files
                 Folders        Directories      
                 sub-folders    Sub-directories
root Directory   C:\               /   

  Commands:
        ls  = List the content of a Directory
        pwd = present Working Directory 
        hostname = 
        cd = change Directory
        sudo hostnamectl set-hostname demo  
        sudo su - ec2-user      
 
 [ec2-user@ip-172-31-89-14 ~]$ pwd
     /home/ec2-user
 Linux File Structure :    
 =====================
  Linux Root Directory  =   /   
[ec2-user@demo ~]$ ls  /
afs   dev  home   media  proc  sbin  tmp
bin   efi  lib    mnt    root  srv   usr
boot  etc  lib64  opt    run   sys   var
=======================================
home : contains users' home Directory details 
=====
[ec2-user@demo ~]$ ls /home
ec2-user   
dominion 
president 
obi 
sudo adduser obi-president  
bin:  contains binary Files (commands) 
====
  ls 
  pwd 
  clear 
  cd 
  touch
  mkdir

sbin: contains system binary Files/commands  
====  Can Only be executed by the admin-user / root user    
  adduser
  passwd 
  chage 
  chown   

IQ: What is the difference between bin and sbin directories in Linux?
    sbin: are binary flies only executable by users with administrative
    or elevated priviledges or admin/root user.  
    bin: files are executable by any user [normal users and admin-users] 
 ls = list the content of a Directory

etc: contains configuration files   
=== 
  /etc/shadow           = detail information about users password  
  /etc/passwd           = detail information about users  
  /etc/ssh/sshd_config  = ssh configuration details 

tmp: temporal file  
=== 

opt:  = Where softwares and packages are installed
=====

lib:  = library files  
====

var: = dynamic files [logs]
========================== 
 - /var/log/messages 
    sudo cat /var/log/messages

  logs 

proc: 
=======
-  meminfo 
-  cpuinfo 
  cat /proc/meminfo    
  cat /proc/cpuinfo

Basic Linux Commands:
=====================
  commands[100K+] OR GUI[30K-60K]
- clear  = clears your command terminal
Run task & workloads using commands.  :
Directory is a container of files 
Folder is a container of files
We have a new client  - Tesla 
==============================
Directory management Commands: 
  mkdir  = Create a Directory  
  rmdir  = delete an empty Directory 
  rm -rf = delete any Directory 
  cd     = Directory navigation  
  pwd    = present Working Directory 
  ls     = list the Directory's content 
Ticket0001:
 Create work directories for tesla?? 
1. tesla tesla_dev tesla_test tesla_prod     
         mkdir tesla  
         mkdir -v tesla-ddde
           -v  = verbose mode 
[ec2-user@demo ~]$ mkdir -v tesla_dev tesla_test tesla_prod
mkdir: created directory 'tesla_dev'
mkdir: created directory 'tesla_test'
mkdir: created directory 'tesla_prod'
[ec2-user@demo ~]$

2. dev/git/maven/aws/nexus/java 
   mkdir dev/git/maven/aws/nexus/java
[ec2-user@demo ~]$ mkdir dev/git/maven/aws/nexus/java
mkdir: cannot create directory
 ‘dev/git/maven/aws/nexus/java’: 
  No such file or directory
mkdir -pv dev/git/maven/aws/nexus/java
  -p = will create both parent and child

 Hello MARK, create a directory using the structure below  
   Devops/SDLC/Linux/Jenkins/Git/Maven/Nexus/ ?? 

  mkdir -pv class/class1/class2/class3/class4
[ec2-user@demo ~]$ ls
class  dev  tesla  tesla_dev  tesla_prod  tesla_test  test
[ec2-user@demo ~]$
The tree command displays the content of directories in a tree structure.
[ec2-user@demo ~]$ tree
-bash: tree: command not found
Install the tree command using the yum package manager  
    yum install tree 
Error: This command has to be run with superuser privileges
       (under the root user on most systems).
 sudo = is use to run command as another user  
 sudo -u obi-president yum install tree
 sudo -u root yum install tree  
 sudo yum install tree 

[ec2-user@demo ~]$ tree
├── class
│   └── class1
│       └── class2
│           └── class3
│               └── class4
├── dev
│   └── git
│       └── maven
│           └── aws
│               └── nexus
│                   └── java
├── tesla
├── tesla_dev
├── tesla_prod
├── tesla_test
└── test
15 directories, 1 file 

20 min break:

[ec2-user@demo ~]$ rmdir class/
rmdir: failed to remove 'class/': Directory not empty  

[ec2-user@demo java]$ pwd
/home/ec2-user/dev/git/maven/aws/nexus/java
cd .. 
cd ../ .. 
cd ../ ../ ../
cd ../ ../ ../ ../      
cd ../ ../ ../ ../ ../
cd - = Take you your last directory  
cd   = Take you to the user's home Directory  

pwd = /home/ec2-user/dev/git/maven/aws/nexus/java
cd  = /home/ec2-user  
cd - 

ls      = List THE content of your pwd  
ls dev  = List THE content of the dev dir  
ls dev/git/maven = List THE content of the maven dir 
ls /dev  =  List THE content of the /dev dir 
ls /home =  List THE content of the /home dir 
=================================================
Class administrators  :
======================
Hands-on training  === 
While studying you encounter an issue
How can you resolve the issue??
 1. Try to fixed/resolve the situation yourself                     100/80

 2. Post the problem in class31 telegram solution Group with        80/60 
    the Screenshot - wait for 1-5min or 5-10mins for help 
    Fellow Class mate [24/7] 

 3. Post the problem in the 24/7 Landmark helpdesk in telegram with  60/40
    the Screenshot - wait for 5-10 mins for help. Landmark community 

4. Contact Team members for help.  

5. Contact Class31 Administrators via WhatsApp/Telegram              40/40  
     Serene LANDMARK      +1 (320) 207-8009
     Ayafor Emmanuel      +1 (206) 210-4445
     Armstrong Emmanuel   +971 58 218-8063
     Oniel                +237 6 73 59 17 62

6. Contact Prof Legah via telegram   
      +1 437 215 2483 Prof. Legah  

Groups/teams Placement:
======================

Hello Engineers,
Running the CAT and LS commands and getting errors
Please help.
Simon 

Listen to the lectures;
Don't try practice along side the prof. 
Watch the video and practice before the next class.  
===========================================================


   18.234.79.178

================================
As a DevOps Engineer I Work with my team to: 
    develop: applications , 
    test: applications, 
    build: applications, 
    review + qualify: applications, 
    secure: applications, 
    deploy: applications,
    Access: applications, [  ]  
    maintain: applications, 
    manage and monitor: applications
  
  packaging : 

using computerised automated Technologies. 
    Technology stack 

https://www.bankofamerica.com/
          - login = userName/cardNumber  
[O
computerisation = Computers :
  -  personal user = memory= 4g/8g/16g/32/64GB  = 400 - 2000USD
       - Laptops / phones / Tablets / watches 

  -  Professional  = memory= 8g---256gb  = 700usd - 20,000USD
       - Workstations / Laptops / desktop  

  -  Enterprise    = memory= 128g---4000gb  = 2,000 - 200K
       - Servers  

CSP = Cloud/Computer Service Providers: 
2023 Convention in Toronto :
   MD   ---> Drive   = 8 hours 
Car Service Provider = uber/lyft ---> 5min 
FSP: Food Service Provider = postmates/UberEATS/instantcart
CSP: aws.amazon.com 
     AWS, AZURE, GOOGLE, ALI BABA
BSF  - FinTech: Banking Service Providers
  Simon: Create account / Transfer / exchange / withdrawal
         e-signing 
         cash deposit / cheque deposit / loan / overdraft 

zelle = 7 Indians  = 5,000 USD/200B

Insurance:
10 millions   = 900,000 employers  / 
                800,000 100K      = 80B

                100,000 BANKINGS  = 10B
                50, 000 Engineers = 15B 
                                    25B

COMMERCIAL PROPERTIES:  

40 Countries :

 The Entire Agile family [2,000 employers] - 
    Scrum Master/
   develop / test / build / qualify / deploy / 
   manage and monitore applications
Labour:
  Direct Labour   ---  
  Indirect Labour --- :

Houston --- 
aa.com    --- tesla   
   2,000USD for a company to create EC2-INSTANCE 

CSP: aws.amazon.com 

Server:
  Name = dbserver 
  ip-address = 34.201.34.133  
  userName = ec2-user 
  password =   
  ssh-private-Key = demo31.pem  
Using password/passwordless access:
  ssh ec2-user@34.201.34.133 

ssh-private-Key access :
  ssh -i demo31.pem ec2-user@34.201.34.133 

 2 mins
5 mins  = 2,000US 


File and directory management Commands:  
======================================
mkdir    dirName   = 
rmdir    dirName   = 
rm -rf   dirName
ls dirName  = List the content of the dir
ls  = List the content of the pwd
pwd 
cd dirName 
====================
touch fileName = create an empty file
Create the following files:
  list.txt 
  hello.py 
  greet.sh 
  app.java  
  monitor.sh   
  deploy.sh 
option1:
touch list.txt 
touch hello.py  
touch greet.sh 

option2:
touch list.txt hello.py greet.sh  

Chidi  = 
Graphical User interface - GUI :

Create a file [list.txt] and add content??    
=========================================
1. Simon 
2. Legah 
3. Landmark 
4. Dominion 
We shall use the vi command:
  vi list.txt 
vi has 'insert' mode and 'command' mode:

1. You start accessing the file in command mode 
   In command mode we can't modify content
     press the 'i' key to enter "insert" mode 
     press "esc key" to enter command mode 

2. Save and Quit: 
    1. press "esc key" to enter command mode 
    2. type ':wq' or ':wq!' and press enter-key 
       to save and quit

3.  Quit without saving:  
     press "esc key" to enter command mode          
     type ':q!' and press enter key to quit 
     without saving

 short-cut -- Save and Quit: 
    press "esc key" to enter command mode
    do a quick double press on the shift+z key  
    to save and quit = press+hold '

Modifying the content of a file:
  Text editors:
 Windows:
    sublime text
    bracket
    notepad++
    vs code 
    atom 
    eclipse 

save time:
  300,000USD/year  
 short-cut is the longest route to success 

Class29: 
   9 months 
   July 8, 2022 --> Jan 7, 2023 
   2/3/4/5/6th month 

4.5 months = modules     :
1.5 months = Bootcamp    :
==============================
DevOps Engineers  = hired/ 
Detailed deployment =- 

vi list.txt   
list :
 simon 
 Legah 
 Paul 
 John 
 Peter 
 James 
 Tita 
 Pefok 
 Linux 
 Windows 
 Git 
 Maven 
 aws 
 gcp 
 mgc 
 toyota 

Reading/displaying the content of a file:
cat fileName
cat -n fileName  
[ec2-user@demo maven]$ cat list.txt
[ec2-user@demo maven]$ cat -n list.txt
     1  list :
     2   simon
     3   Legah
     4   Paul
     5   John
     6   Peter
     7   James

head fileName = display the 1st 10 lines 
head -5 fileName = display the 1st 5 lines 
head -2 fileName = display the 1st 5 lines                

tail fileName = display the last 10 lines
tail -2 fileName = display the last 2 lines
tail -1 fileName = display the last lines

less fileName
   press 'q' to exit
more fileName 

Backup files:
============
cp = creates another copy of your file  
cp fileName newFileName

mv = rename and/or relocate
mv hello.py helloworld.py 
mv aws /tmp/gcp

rm fileName = delete the file   
wc fileName = 
wc -l list.txt = display number of lines 

ln = Create links of files:
Hard Link = copy:
  ln fileName linkName  
  ln list.txt mylist 

soft links:
  ln -s fileName linkName
  ln -s new.txt mybest

[ec2-user@demo maven]$ ll
total 16
drwxr-xr-x. 2 ec2-user ec2-user    6 Jan 21 19:40 class31
-rw-r--r--. 2 ec2-user ec2-user  379 Jan 21 19:22 list.txt
lrwxrwxrwx. 1 ec2-user ec2-user    7 Jan 21 19:40 mybest -> new.txt
-rw-r--r--. 2 ec2-user ec2-user  379 Jan 21 19:22 mylist
-rw-r--r--. 1 ec2-user ec2-user  379 Jan 21 19:25 new.txt
-rw-r--r--. 1 ec2-user ec2-user 4028 Jan 21 18:39 notes.txt

FileType:
 d    = Directory   
 -    = regular file     
 l    = link   

GUI  :
 OR 
CLI  :

Connect to the demoserver hosted in aws cloud and run/execute:
   workloads/tasks:
============================================================  
ipaddress = 18.234.79.178
userName  = ec2-user
password  = ?
ssh-private-Key =    
ssh-client software = 
mobaXterm for windows system users  
terminal for macOS system users

ssh -i "demo31.pem" ec2-user@ec2-18-234-79-178.compute-1.amazonaws.com

ssh -i demo31.pem ec2-user@18.234.79.178

Linux systems/Servers are:
   Multi-User 
   Multi-Tasking
   case sensitive 

connectivity issues:
authentication :

File mgt commands:
==================
 touch  
 vi  
 cat / head / tail / less / more
 wc  
 create backups = cp / ln     
 mv  = rename files and directories
     = migrate/displace files and directories

1     2       3   4        5         6      7         8
d  rwxr-xr-x. 2 ec2-user Engineer    6 Jan 21 19:40    class31
-  rw-r--r--. 1 ec2-user Engineer  379 Jan 21 19:22    mylist
l  rwxrwxrwx. 1 ec2-user ec2-user    7 Jan 21 19:40    mybest -> new.txt

User  = dominion 
group = Engineer [dominion, simon, Landmark]
Fields for files:
  1)  type        [-file, d=dir, l=soft link]   

  2)  Permissions [ owner=rwx  group=r-x  others=r-x ]   2023 G Wagon  = Ifoema 
                  [ medical records, bank accounts]
  3)  Number of links
  4)  Owner [ ec2-user ]
  5)  Group Owner [ Engineer ]
  6)  Size of the File in Bytes
  7)  Date and Time of creation
  8)  File name/Dir Name
File security / Permissions:
============================
Who can access a file?
  owner   
  groupOwner   
  others
Access levels:        
  read    = r = 4   
  write   = w = 2
  execute = x = 1 

             owner   groupOwner  others  Default Permission  
class31-dir  rwx=7   r-x=5       r-x=5     0755  
mylist-file  rw-=6   r--=4       r--=4     0644  

                   Normal User      root User
                   file     dir     file     dir
full Permissions   0666    0777     0666     0777
default perm.      0644    0755     0644     0755
                   =====   =====    ====     =====
umask              0022    0022     0022     0022
                   =====   =====    0002     0002                    
                   simon   user   
                   file     dir 
full Permissions   0666    0777                        
custom Permissions 0600 
                   ====    ====
custom umask       0066    0066
                   =====   =====

 owner          6  wr-
 groupOwner     0  --- 
 others         0  ---

all directories created 
all files created   
What is the default umask value of a normal user?  0022     
Set a custom umask value to ensure that:
  All file created should 600 Permissions  

- rw-  ---   ---   . 1 root root 0 Jan 24 01:33 deploy.sh

sudo su -    = switch user to the root user   
  owner   group  others
d rwx=7   r-x=5   r-x=5       2 root root 6 Jan 24 01:18 dev31
- rw-=6   r--=4   r--=4              1 root root 0 Jan 24 01:19 test.txt


[ec2-user@demo maven]$ whoami
ec2-user
[ec2-user@demo maven]$
[ec2-user@demo maven]$ sudo su -
[root@demo ~]#
[root@demo ~]# whoami
root


file = mylist  
dir  = class31  
cd mylist 
cd class31   


d rwx  r-x  r-x. 2 ec2-user ec2-user    6 Jan 21 19:40 class31
- rw-  r--  r--. 1 ec2-user ec2-user  379 Jan 21 19:22 mylist
=============================================

what is umask value?? umask is use to determine/set the Permissions that 
files and directories will inherit at creation. Good for file security. 
umask value set the Default files permissions for users.
what is the Default file permissions for root and normal users?:
    0644 and 0664 respectively.
what is the umask value for root and normal users?: 
                            0002     0022

Graduate  === 
chmod  = change the permissions for individual files and directories  
chmod 600 fileName    
chown   
chgroup  
=======
              owner       group       fileName:
drwxr-xr-x. 2 ec2-user    ec2-user    class

-rw-r--r--. 1 ec2-user    ec2-user    password.txt  

-rw-r--r--. 1 ec2-user    ec2-user    users.all

-rw-r--r--.   Buhari      Buhari       appointment 

  sudo chown    newOwner fileName 
  sudo chgroup  newOwner fileName  

 [ec2-user@demo class31]$ chown obi password.txt
chown: changing ownership of 'password.txt': Operation not permitted 
We need sudo/root user's access to change ownership of files   
   sudo chown obi password.txt
   sudo chown obi password.txt

[ec2-user@demo class31]$ sudo chown atiku password.txt
chown: invalid user: ‘atiku’

grant automation access to obi-president   

drwxr-xr-x. 2 obi obi 6 Jan 24 01:44 class
-rw-r--r--. 1 obi obi 0 Jan 24 01:44 password.txt
-rw-r--r--. 1 obi obi 0 Jan 24 01:44 users.all

commands:
372  ls dev/git/maven/
  373  cd dev/git/maven/
  374  clear
  375  ls
  376  ll
  377  cd class31/
  378  cd -
  379  class mylist
  380  cd mylist
  381  clear
  382  whoami
  383  sudo su -
  384  ll
  385  ls -l
  386  sudo su -
  387  ll
  388  cd class31/
  389  clear
  390  ls
  391  umask
  392  touch password.txt
  393  touch users.all
  394  mkdir class
  395  clear
  396  ll
  397  ls /home/
  398  sudo adduser obi
  399  ls /home/
  400  chown obi password.txt
  401  sudo chown atiku password.txt
  402  sudo chown jakabang password.txt
  403  clear
  404  ll
  405  sudo chown obi password.txt
  406  ll
  407  sudo chgrp obi password.txt
  408  ll
  409  clear
  410  ll
  411  sudo chown obi:obi  users.all
  412  ll
  413  sudo chown obi:obi class
  414  ll
  415  clear
  416  history
[ec2-user@demo class31]$
   umask    
   chmod   
   chown  
   chgrp  
grep command = extract patterns from files  
grep simon list     
grep -i simon list
 where -i =  ignores case sensitivity   

simon 

[ec2-user@demo maven]$ grep simon mylist
simon
simon
[ec2-user@demo maven]$ cp mylist list

pipe command = |  
   Enable the output of a command to be
   the input of another/next command 

cat list | grep -i legah   

IQ: explain the grep and the pipe commands ?

[ec2-user@demo maven]$ cat list | grep Simon
Simon Legah
[ec2-user@demo maven]$
[ec2-user@demo maven]$ grep Simon list
Simon Legah

 cat /etc/passwd  
root:x:0:0:root:/root:/bin/bash
obi:x:1002:1002::/home/obi:/bin/bash
ec2-user:x:1000:1000:Cloud User:/home/ec2-user:/bin/bash

grep obi /etc/passwd  

cat /etc/passwd | grep obi | sort 

sort  

find = search for files and directories  
find /home/ec2-user -name list   
find /home/obi  -name list   
find ~    
sudo find /  -name list
search for files in your pwd = 
  find . -name list

obi    /home/obi/  list   
simon /home/simon/ list    
datti /home/datti/ list      
chidi /home/chidi/ list   

Default userHomeDirectory =   /home/$user  

[ec2-user@demo maven]$ date
Wed Jan 25 01:13:13 AM UTC 2023

 date -s "24 Jan 2023 10:16:50"

[ec2-user@demo maven]$ date -s "24 Jan 2023 10:17:00"
date: cannot set date: Operation not permitted

[ec2-user@demo maven]$ sudo date -s "24 Jan 2023 10:17:00"
Tue Jan 24 10:17:00 AM UTC 2023
[ec2-user@demo maven]$
[ec2-user@demo maven]$ date
Tue Jan 24 10:17:03 AM UTC 2023

timedatectl list-timezones
sudo timedatectl set-timezone "America/New_York"  
sudo date -s "24 Jan 2023 20:22:00"

Job Schedule:
 1. backup databases every mid night  00.00.00 

User Mgt:
=======

User/group Management:
=====================
root user = The root user is the administrator or admin user superuser  
              that can run all commands and tasks unrestricted 
              He has unrestricted access into files, etc.    

In Linux the root user is called = root 
root user is created by system when a server is Launch/created. 

Normal Users: Are created by the administrator [root user]    

adduser = will create a user in a linux server   
useradd = will create a user in a linux server

Create user accounts for landmark and datti and verify?  :

1. User account creation require root access 
     whoami
     useradd landmark   
     sudo -u root useradd landmark  = 

     sudo useradd landmark 
     sudo useradd datti

     sudo -u obi  useradd landmark 
     sudo -u ec2-user  useradd landmark 
       
     sudo command allows a user to run commands as another user   

[ec2-user@demo ~]$ useradd landmark
useradd: Permission denied.
useradd: cannot lock /etc/passwd; try again later.

  /etc/passwd and cat /etc/passwd   

[ec2-user@demo ~]$ find /home/ec2-user/ -name test
/home/ec2-user/test
[ec2-user@demo ~]$ cat /home/ec2-user/test
I will be rich in 2023
As a DevOps Engineer
IN JESUS NAME
[ec2-user@demo ~]$
[ec2-user@demo ~]$
[ec2-user@demo ~]$ cat test
I will be rich in 2023
As a DevOps Engineer
IN JESUS NAME
[ec2-user@demo ~]$

  accessing files:
    relativePath  = start from pwd  
    absolutePath  = start from the root directory [/] 

what is the difference between 
   cat /home/ec2-user/test and  
   /home/ec2-user/test

  cat list  and list  

verify if a user was created/existed?
====================================
 fileName  = /etc/passwd  
 dirName   = /home/
 cat /etc/passwd        = 300 users  
 tail -5 /etc/passwd 
 grep datti /etc/passwd   
 grep landmark /etc/passwd 

/etc/passwd 
  1. root 
  47. datti  
  48  landmark 
====================
sudo useradd datti  
sudo useradd landmark 

passwd = use to assign/modify user's passwd 

[ec2-user@demo ~]$ passwd obi
passwd: Only root can specify a user name.
[ec2-user@demo ~]$ sudo passwd obi
Changing password for user obi.
New password: admin123 
BAD PASSWORD: The password is shorter than 8 characters
Retype new password:  admin123
passwd: all authentication tokens updated successfully.

you are connected as landmark/ec2-user and you need to users:
su  = switch user   
su - root  = switch to the root user's account   
su - obi   = switch to the obi user's account 

[ec2-user@demo ~]$ su - root
Password:

[ec2-user@demo ~]$ sudo su - root
Last login: Mon Jan 23 20:25:35 EST 2023 on pts/0

[root@demo ~]#  masterKey = 
                transfer --- 25B 
   owner  =     FTX   
   root   = 300BUSD 
   bosco: / mark / peter = 
   Sam Bankman-Fried:

[ec2-user@demo ~]$ exit
logout
[root@demo ~]#

[ec2-user@demo ~]$ su - obi
Password:
Last login: Tue Jan 24 21:30:21 EST 2023 on pts/0           = 
Last failed login: Tue Jan 24 21:30:45 EST 2023 on pts/0
There was 1 failed login attempt since the last successful login.
[obi@demo ~]$

[obi@demo ~]$ sudo su - root

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    -#1) Respect the privacy of others.
    -#2) Think before you type.   = 
    -#3) With great power comes great responsibility.

[sudo] password for obi:
obi is not in the sudoers file.  This incident will be reported.

Granting sudo access to users:
  vi /etc/sudoers   
  save and quit = :wq! and press enter 

It is not recommended to run tasks directly as
 the admin/root user for security reasons.
============================================================================
1 hour we going class    = 12pm-1pm
2 hours = Grouping/Teams = 1pm-2:30pm grouping 
                           Testimonies = 2:30pm  
===========================================================================
userMgt:
  creating user's account  
  assign passwords to users  
  assign/add users to groups  
  delete users    
  creating groups 
  Elevate user's privilidges 
  modify user account
  lock and unlock user accounts
  Reset user's password 
  set expiry date for user's account/password  
  Assign task to users 
  grant and remove admin/sudo prilvileges

userMgt:
  creating user's account  :
    creating user's account  :
    useradd userName      
    useradd james 
    creating user's account requires sudo access :
       sudo useradd james && 
       sudo useradd paul  
       sudo useradd james && sudo useradd paul && tail -3 /etc/passwd    
  assign passwords to users if you are AUTHORISE  :
       sudo passwd userName  
       sudo passwd james

  creating groups with sudo/root access :
    sudo groupadd groupName
    sudo groupadd managers 
    sudo groupadd developers 
    sudo groupadd engineers 
    sudo groupadd tesla 
    sudo groupadd developers && sudo groupadd engineers ; tail -3 /etc/group  

  assign/add users to groups  = sudo/root access  is required: or 
  modify the account of users = sudo/root access  is required: 
    usermod -G groupName userName  = add user to a secondary group  
    usermod -G engineers paul   

  delete users: = sudo/root access  is required:
    sudo userdel userName     = delete user's account without the UHD 
    sudo userdel -c userName  = delete user's account with the UHD  
       UHD = Hser Home Hirectory
       [ec2-user@demo ~]$ pwd   = /home/ec2-user  

[ec2-user@demo ~]$ ll /home/ec2-user
total 47184
drwxr-xr-x. 3 ec2-user ec2-user       78 Jan 18 16:42 aws
-rw-r--r--. 1 ec2-user ec2-user 48303068 Jan 19 20:18 awscliv2.zip
-rw-r--r--. 1 ec2-user ec2-user      146 Jan 19 20:18 aws.sh
drwxr-xr-x. 3 ec2-user ec2-user       31 Jan 19 20:55 dev
drwxr-xr-x. 3 ec2-user ec2-user      135 Jan 19 23:00 tesla_infra
drwxr-xr-x. 2 ec2-user ec2-user        6 Jan 17 20:25 tesla_test
-rw-r--r--. 1 ec2-user ec2-user       58 Jan 24 21:01 test
-rw-r--r--. 1 ec2-user ec2-user      174 Jan 19 22:51 tf.sh
[ec2-user@demo ~]$ tree   
    1205 directories, 6539 files

[ec2-user@demo ~]$ sudo useradd james && sudo useradd paul && tail -3 /etc/passwd
ofe:x:1006:1006::/home/ofe:/bin/bash
james:x:1007:1007::/home/james:/bin/bash
paul:x:1008:1008::/home/paul:/bin/bash
[ec2-user@demo ~]$
[ec2-user@demo ~]$  sudo groupadd developers && sudo groupadd engineers ; tail -3 /etc/group
paul:x:1008:
developers:x:1009:
engineers:x:1010:
[ec2-user@demo ~]$
[ec2-user@demo ~]$ #cat  /etc/group
[ec2-user@demo ~]$
[ec2-user@demo ~]$ id james
uid=1007(james) gid=1007(james) groups=1007(james)
[ec2-user@demo ~]$
[ec2-user@demo ~]$ id paul
uid=1008(paul) gid=1008(paul) groups=1008(paul)
[ec2-user@demo ~]$
[ec2-user@demo ~]$ sudo usermod -G engineers paul && sudo usermod -G developers james; id paul; id james
uid=1008(paul) gid=1008(paul) groups=1008(paul),1010(engineers)
uid=1007(james) gid=1007(james) groups=1007(james),1009(developers)

  Reset/set user's password :
    passwd   = 
    sudo passwd userName  
    sudo passwd paul  

  Elevate user's privilidges: 
    sudo vi /etc/sudoers  or sudo visudo 
    Grand sudo access to paul user
    sudo echo "userName ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/userName
    sudo echo "paul ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/paul
  grant and remove admin/sudo prilvileges:

  lock user accounts = sudo/root access  is required:
    passwd -l userName

  unlock user accounts: = sudo/root access  is required:
    passwd -u userName
    sudo passwd -uf ofe

  delete user account: = sudo/root access  is required:
    userdel userName  
    sudo userdel ofe  
  
  Assign task to users = sudo/root access  is required: 
  
  Can we delete user account without deleting the content of the account?
     user userName 
     user -r userName 

  set expiry date for user's account/password  : 
    = sudo/root access  is required:
      chage userName  
      sudo chage userName 

[paul@demo ~]$ sudo chage james
Changing the aging information for james
Enter the new value, or press ENTER for the default

        Minimum Password Age [0]: 0
        Maximum Password Age [99999]: 30
        Last Password Change (YYYY-MM-DD) [2023-01-31]:
        Password Expiration Warning [7]: 10
        Password Inactive [-1]: 10
        Account Expiration Date (YYYY-MM-DD) [-1]: 90
[paul@demo ~]$

IQ: How can a user access the server/ec2instance externally using password?
2. Enable PasswordAuthentication in the server
1. method1:
  sudo vi /etc/ssh/sshd_config  
  change: PasswordAuthentication=no to PasswordAuthentication=yes
  sudo service sshd restart

2. method2:  
sudo sed -i "/^[^#]*PasswordAuthentication[[:space:]]no/c\PasswordAuthentication yes" /etc/ssh/sshd_config
sudo service sshd restart

  ipAddress = 18.234.79.178
  user = paul   
  password  = admin123  
     ssh paul@18.234.79.178   

  ipAddress = 18.234.79.178
  user = ec2-user   
  password 
  ssh-private-Key = demo.pem   

system mgt commands:
[paul@demo ~]$ who
userName               TIME               From  
ec2-user pts/0        2023-01-30 19:38 (99.233.53.63)
paul     pts/1        2023-01-30 20:44 (99.233.53.63)
landmark pts/2        2023-01-30 20:43 (99.233.53.63)


   1. ssh paul@18.234.79.178 
      ssh paul@18.234.79.178  
      password = admin123   


[paul@demo ~]$ who
userName               TIME               From 
ec2-user pts/0        2023-01-30 19:38 (99.233.53.63)
paul     pts/1        2023-01-30 20:44 (99.233.53.63)
landmark pts/2        2023-01-30 20:43 (99.233.53.63)

obi      pts/3        2023-01-30 21:23 (173.70.196.39)
obi      pts/4        2023-01-30 21:23 (197.210.85.135)
obi      pts/5        2023-01-30 21:24 (54.173.238.96)
obi      pts/6        2023-01-30 21:24 (3.95.152.117)
obi      pts/7        2023-01-30 21:24 (54.234.217.125)
obi      pts/8        2023-01-30 21:24 (76.186.11.180)
obi      pts/9        2023-01-30 21:24 (24.66.245.75)
obi      pts/10       2023-01-30 21:24 (99.105.239.33)

IP Details For: 99.233.53.63  
https://whatismyipaddress.com/

[paul@demo ~]$ w 

whoami  
whatis    
whereis   

[paul@demo ~]$ w
 21:33:18 up 13 days,  2:04, 11 users,  load average: 0.00, 0.00, 0.00
USER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT
ec2-user pts/0     19:38   21:22   0.08s  0.02s sshd: ec2-user [priv]
paul     pts/1     20:44    0.00s  0.02s  0.00s w

Automation:
 8 hours  / 3 hours   


date : Print or set the system date and time
df : Report file system disk space usage
du : Estimate file space usage.
hostname : Show or set the system host name.
ifconfig (OR) hostname -i (OR) ip a : To find the private IP address.

[paul@demo ~]$ df -h
Filesystem      Size  Used Avail Use% Mounted on
devtmpfs        4.0M     0  4.0M   0% /dev
tmpfs           381M     0  381M   0% /dev/shm
tmpfs           153M   20M  134M  13% /run
/dev/xvda4      9.4G  9.3G  0.1G  96% /                 :

  Program/script  = if cpu usage exceed 80% send alerts   

[ec2-user@demo ~]$ hostname
demo
change the hostname of your server to dbserver  :
  sudo hostname newName  
  sudo hostname dbserver   

ifconfig (OR) hostname -i (OR) ip a

[paul@dbserver ~]$ hostname -i
ipv6 = fe80::10dc:85ff:fe39:6127%eth0 
ipv4 = 172.31.89.14

private ipAddress = 172.31.89.14
public ipAddress  =  18.234.79.178
  curl ifconfig.me    

root user   
ec2-user    = root access  

useMgt files:
  /etc/passwd  
  /etc/group
  /etc/shadow  = store user's passwd  
  /etc/sudoers        

useMgt dir:
  /home  

[root@dbserver ~]# tail -5 /etc/shadow
landmark:$y$j9T$UL4yNnB6./xS649EMNsoF1$Bwk6PHv6/hc0n9kmZtM7MrSU/9qKqFlMchH.OHMJ1H.:19388:0:99999:7:::

datti:!!:19382:0:99999:7:::

datti:$password:19382:0:99999:7:::

james:$y$j9T$35KB0MWuelNvMSvgChyd7/$78ZQoPV3qHfaIjA9mxsX2YD1sct7ggCGvUZFl13DgF3:19388:0:30:10:10:90:
paul:$y$j9T$3N/Yvo8ob.oZgii2XEN0y/$07Re3PPxHFkuUrnkhM01r8MGgnxw8nGv1b.ZmZE/JT9:19388:0:99999:7:::
lmg5:$y$j9T$v7iWSWp3IIj1Vvaim8eck0$sk86lO9pzEjBmKDXUNwpSdahJ3jFqPVcv1AUlMXhedD:19388:0:99999:7:::
[root@dbserver ~]#

[root@dbserver ~]# tail -5 /etc/shadow
landmark:$y$j9T$UL4yNnB6./xS649EMNsoF1$Bwk6PHv6/hc0n9kmZtM7MrSU/9qKqFlMchH.OHMJ1H.:19388:0:99999:7:::
datti:$y$j9T$KzBJBf0aRkAgwp7VfWuTi.$IDvnxC/qEjDSv2.hHawIfu/N6izWn7d8F8KlDejkj84:19388:0:99999:7:::
james:$y$j9T$35KB0MWuelNvMSvgChyd7/$78ZQoPV3qHfaIjA9mxsX2YD1sct7ggCGvUZFl13DgF3:19388:0:30:10:10:90:
paul:$y$j9T$3N/Yvo8ob.oZgii2XEN0y/$07Re3PPxHFkuUrnkhM01r8MGgnxw8nGv1b.ZmZE/JT9:19388:0:99999:7:::
lmg5:$y$j9T$v7iWSWp3IIj1Vvaim8eck0$sk86lO9pzEjBmKDXUNwpSdahJ3jFqPVcv1AUlMXhedD:19388:0:99999:7:::
[root@dbserver ~]#


Linux7 running notes:
======================
1. Computing Technologies 
   Computer = HARDWARE + Softwares 
   GUI -- Generally run task manually   
   CLI -- Generally automate tasks  

2. Examples of tasks/workloads:
 Explain your experience with Linux systems??
=============================================
2. Examples of tasks/workloads:
     userMGT
     fileMgt 
     systemMgt  

3. Running workloads in Linux servers/systems using:
  GUI  
  Commands - CLI  
  scripts  -  
  Examples of workloads/tasks executed:
    FileMGT /  = touch, vi, echo, ls, umask, chmod, find, grep, pipe, 
                 ln -s, cp, mv, rm, awk, cut, sort, sed         

    userMGT /  = adduser, usermod, userdel, chage, groupadd, passwd 

    systemMGT & Monitoring = df -h, du -h, whoami, who, w,  free -m, 

    ProcessMGT = top, ps -ef, jobs, kill, bg, fg 

    packageMGT = wget, yum, rpm, 

    securityMGT= passwd, selinux, firewall 

 
    serviceMGT = systemctl start/stop/enable/status
  

packageMGT: = wget, yum, rpm, 
    download the following packages/softwares/applications
    to make your studies simple:
   ssh-client : mobaxterm, puTTY, terminal-MacOS, gitbash
   text editors: sublime-text, bracket, vs-code, notepad++ 
   study platforms: zoom, telegram, WhatsApp Desktop, 

packageMGT: 
   text editors: vim / vi, nano, tree   
   use package managers to install packages
   yum/dnf  =  package managers redhat/centOS 
   rpm,     =  
   chocolatey = package manager for windows
   apt  = package manager for debian/ubuntu     

   yum install vim   nano tree 
                55m  25m  60m   
   sudo yum install vim nano tree

   sudo yum install vim nano tree -y  

   sudo yum remove vim nano tree -y

   wget  = is a non interactive network downloader   
   curl  = , 
  wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.71/bin/apache-tomcat-9.0.71.zip
  
  vi 
Linux file system:
=================
  opt  

ProcessMGT: = top, ps -ef, jobs, kill, bg, fg 
    FileMGT 
    userMGT 
    ProcessMGT
    securityMGT
    packageMGT
    serviceMGT 
    systemMGT 
    Monitoring 
    dbBackup 
  Tasks are processes running in your server:  
top top
19:53:17 up 14 days, 24 min, 1 user, 
 load Average: 0.00, 0.00, 0.00           0.99/1.0  
Tasks/processes:  95 total,   1 running,  94 sleeping,   0 stopped,   0 zombie
%Cpu(s):  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
MiB Mem :    761.6 total,     97.3 free,    327.8 used,    483.0 buff/cache
MiB Swap:      0.0 total,      0.0 free,      0.0 used.    433.8 avail Mem

                  System1         System2   
Load average      0.95/1=95%      0.65/1=65%    
Tasks/processes:  95 total,   11 running,  80 sleeping,   0 stopped,   
                   4 zombie 

73073 landmark  20   0   10508   4136   3436 R   0.3   0.5   0:00.36   top

[landmark@demo opt]$ ps
    PID TTY          TIME CMD
  71626 pts/0    00:00:00 bash
  73109 pts/0    00:00:00 ps
 
  top  
  ps 
  ps -ef
  ps -ef | grep sshd   

serviceMGT:
  service serviceName arguments
  service sshd status 
  service sshd start
  service sshd stop/start/status/enable/disable/restart  

  systemctl arguments serviceName
  systemctl stop/start/status/enable/disable/restart sshd 
  systemctl start/stop/status httpd  
  systemctl  


Explain your experience with Linux systems??
=============================================
1. Deploying, provisioning and creating Linux Servers in AWS Cloud.
       connect to servers using - ssh protocol  
       
2. Configuring, optimising, commissioning, decommissioning 
   and securing Linux servers

3. Running workloads in Linux servers/systems using:
  GUI  
  Commands - CLI  
  scripts  -  
  Examples of workloads/tasks executed:
    FileMGT /  = touch, vi, echo, ls, umask, chmod 
    userMGT /  = adduser, usermod, userdel, chage 
    ProcessMGT = top, ps -ef, jobs, kill, bg, fg 
    securityMGT= passwd, selinux, firewall 
    packageMGT = wget, yum, rpm,  
    serviceMGT = systemctl start/stop/enable/status
    systemMGT & Monitoring = df -h, free -m,    

4. scheduling and Automating tasks using cron tables 
   1. Backup all databases every midnight
   2. Deploy the latest version of the application every Sunday at midnight
   3. optimise our appServers every month on the 28th day  at midnight  
       yum update -y &&  yum upgrade -y    
   4. monitor system resources and send alerts using threshold every minute
       if cpu/mem usage exceed 80% send email df -h  = cpu 


Archive/Data Backup Commands:
zip :   Package and compress (archive) files  
unzip:  Extract compressed files in a ZIP archive.  
tar :   It is used to archive the directory/file

   tar -cfv  notes.txt  

tar = is used to :
  tar -cvf fileName fileName.tar.gz     = compress files  
  tar -cvf mynotes.tar.gz notes.txt  
https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.71/bin/apache-tomcat-9.0.71.tar.gz

wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.71/bin/apache-tomcat-9.0.71.tar.gz

tar -xvf apache-tomcat-9.0.71.tar.gz


  tar -xvf fileName.tar.gz   extract compressed *.tar.gz files 

9pm:
===
 --- job1  = 113/hr  = 235,000 
     job2              165,000
     job3              

kiddergarden  = $548,000  :
Linux and Linux commands  :   
============================
ACCA since 2009  = 
1000 accountants / 100 Charted accountants  
============================================
6 - 18 hours  --- computer  

simon = root access  :
  amaka   
  chioma 
  james 

Ticket0001_userCreation:
    Please create user accounts for our contractors - 
    chidi and Tita  
     useradd chidi && useradd Tita 
     sudo useradd chidi && sudo useradd Tita   
[sudo] password for amaka: admin123  
amaka is not in the sudoers file.  This incident will be reported.
 Blocker --- AUTHORISATION

Team meetings are very Important  = 18 = 3 500,000USD / year  :

High Level = You will feel good in but you will substance    
Detail

TO GOD  
==================================

You have a Blocker, how will you resolve it:
============================================
1. Check company's documentation --- running/pdf notes, video    
2. Contact Team members   
3. Use AI platforms [google, youtube, chartPGT]
4. Communities -   
6. 

3 = 40hrs * 3 = 120 hours:
  1. Terraform and aws
  2. Terraform and azure/GCP      
  Kubernetes  
  docker  
  jenkins  
  aws 

changing the server hostname:
  sudo hostname newName                    = temporal change   
  sudo hostnamectl set-hostname newName    = permanent change 
  sudo hostnamectl set-hostname dbserver         

